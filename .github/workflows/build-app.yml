# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Build Application

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'lib/**'
      - 'nitori_core/**'
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  test_core:
    uses: ./.github/workflows/build-core.yml
  build:
    runs-on: ubuntu-latest
    needs: test_core
    steps:
      - uses: actions/checkout@v3
      - name: Rustup
        run: rustup toolchain install stable --profile minimal
      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2
      - name: Build Core
        run: cargo build --release
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Build Application
        run: |
          flutter clean
          flutter config --enable-windows-desktop
          flutter build windows
          cp target/release/nitori_core.dll build/windows/runner/Release/
      - name: Upload Zip
        uses: actions/upload-artifact@v3.1.2
        with:
          name: NitoriToolbox Zip
          path: 'build/windows/runner/Release/*'
      - name: Build MSIX
        run: |
          flutter clean
          dart run msix:build
          cp target/release/nitori_core.dll build/windows/runner/Release/
          dart run msix:pack
      - name: Upload Zip
        uses: actions/upload-artifact@v3.1.2
        with:
          name: NitoriToolbox MSIX
          path: 'build/windows/runner/Release/*.msix'